<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Coopers.BusinessLayer.API</name>
    </assembly>
    <members>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Coopers.BusinessLayer.API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Coopers.BusinessLayer.API.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Coopers.BusinessLayer.API.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Coopers.BusinessLayer.API.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.#ctor(Coopers.BusinessLayer.API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Coopers.BusinessLayer.API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Coopers.BusinessLayer.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Coopers.BusinessLayer.API.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.LookupController">
            <summary>
            Lookup Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.LookupController.GetApplicationList">
            <summary>
            Returns the list of supported Application Names and Id's.
            </summary>
            <returns>application info</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.NotificationController">
            <summary>
            Notification Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetNotificationList(System.Int16,System.Int64,System.Int64)">
            <summary>
            Returns data points recorded in a range of time (limited to a 12 hour window)
            </summary>
            <param name="Minutes">Number of minutes past Notifications will be returned</param>
            <param name="LastSentNotificationID">Limits notification results to notifications sent after this ID</param>
            <param name="SensorID">Limits which sensor notifications will come back. If this field is left null it will bring back all notifications for all sensors</param>
            <returns>list of notification info</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetNotificationList(System.String,System.String,System.Int64)">
            <summary>
            Returns data points recorded in a range of time (limited to 7 days and 5000 records)
            </summary>
            <param name="From">starting point of the time period for your date range of notifications sent</param>
            <param name="To">ending point of the time period for your date range for notifications sent</param>
            <param name="SensorID">Limits which sensor notifications will come back. If this field is left null it will bring back all notifications for all sensors.</param>
            <returns>list of notification info</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetSensorsAssignedToNotification(System.Int64)">
            <summary>
            Returns the list of sensors that belongs to user based on the notification they are assigned to.
            </summary>
            <param name="NotificationID">Filters list to sensors that belong to this notification id</param>
            <returns>sensor list</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetGatewaysAssignedToNotification(System.Int64)">
            <summary>
            Returns the list of gateways that belongs to user based on the notification they are assigned to.
            </summary>
            <param name="NotificationID">Filters list to sensors that belong to this notification id</param>
            <returns>gateway list</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetAccountNotifications(System.Int64)">
            <summary>
            returns all notificaiton on the specified account
            </summary>
            <param name="AccountID">Brings back a list of all notifications on a specific account</param>
            <returns>list of notifications</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetNotificationScheduleList(System.Int64,System.String)">
            <summary>
            Returns a list of Schedules for a specific notificaiton
            </summary>
            <param name="NotificationID">Brings back a list of all the daily schedules for the specific notification</param>
            <param name="Day">Brings back a single day's schedule</param>
            <returns>schedule list</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetNotificationListByGateway(System.Int32,System.Int32)">
            <summary>
            Get the sent notification list for a sensor
            </summary>
            <param name="StartIndex">offset</param>
            <param name="Count">no of records to fetch</param>
            <param name="FromDate">start date</param>
            <param name="ToDate">end date</param>
            <returns>List of notifications</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetNotificationListByAccountID(System.Int32,System.Int32,System.Int64)">
            <summary>
            Get the Notification List for an Account
            </summary>
            <param name="StartIndex">Start index</param>
            <param name="Count">No of records to retrieve</param>
            <param name="AccountID">unique indentofoer for an account</param>
            <returns>List of notification info</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetSentNotificationListBySensor(System.Int64,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get the sent notification list for a sensor
            </summary>
            <param name="StartIndex">offset</param>
            <param name="SensorID">unique identifier for the sensor</param>
            <param name="Count">no of records to fetch</param>
            <param name="FromDate">start date</param>
            <param name="ToDate">end date</param>
            <returns>List of notifications</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetSentNotificationListByGateWay(System.Int64,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get the sent notification list for a gateway
            </summary>
            <param name="StartIndex">offset</param>
            <param name="Count">no of records to fetch</param>
            <param name="FromDate">start date</param>
            <param name="ToDate">end date</param>
            <returns>List of notifications</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.GetSentNotificationByAccount(System.Int64,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get the sent notification list for an Account
            </summary>
            <param name="AccountID">unique indentofier for the account</param>
            <param name="StartIndex">offset</param>
            <param name="Count">no of records to fetch</param>
            <param name="FromDate">start date</param>
            <param name="ToDate">end date</param>
            <returns>List of notifications</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.ToggleNotification(System.Int64,System.Boolean)">
            <summary>
            sets the Notification active or inactive
            </summary>
            <param name="NotificationID">Unique identifier of the Notification</param>
            <param name="On">on flag that sets the notification on or off based off its value</param>
            <returns>Success if Notification toggeled successfully</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.UpdateNotification(Coopers.BusinessLayer.Model.DTO.NotitifcationWithSchedules)">
            <summary>
            Update Notification
            </summary>
            <param name="Notification">Notification Model</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NotificationController.CreateNotification(Coopers.BusinessLayer.Model.DTO.NotitifcationWithSchedules)">
            <summary>
            Create a Notification
            </summary>
            <param name="Notification">Notification Model</param>
            <returns>Id of the newly created notifcation</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.NetworkController">
            <summary>
            Network Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NetworkController.GetNetworkList">
            <summary>
            Returns the list of networks that belong to user.
            </summary>
            <returns>returns the network list</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NetworkController.UpdateNetwork(Coopers.BusinessLayer.Services.DTO.UpdateNetwork)">
            <summary>
            Update the Network and the NetworkLocation record
            </summary>
            <param name="Network">Network info to update</param>
            <returns>No of records</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NetworkController.CreateNetwork(Coopers.BusinessLayer.Services.DTO.CreateNetwork)">
            <summary>
            Adds new wireless sensor network to account
            </summary>
            <param name="Network">Network create model</param>
            <returns>unique identifier for the newly created Network</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.NetworkController.DeleteNetwork(System.Int64)">
            <summary>
            Removes the network from the system.
            </summary>
            <param name="Name">Unique identifier of the network</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.AccountController">
            <summary>
            Account Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.AccountController.GetAccountSummary">
            <summary>
            Get the Account summary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.AccountController.GetAccountResources(System.Int64)">
            <summary>
            Get the Account Resources for an Account
            </summary>
            <returns>AccountResource model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.AccountController.GetAccountStatusSummary">
            <summary>
            Get the customer status summary
            </summary>
            <returns>status summary model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.AccountController.GetCustomers">
            <summary>
            Get the customers list
            </summary>
            <returns>List of customer summary model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.AccountController.GetAccountUserList(System.Int64)">
            <summary>
            Get the Account summary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.AccountController.UpdateAccount(Coopers.BusinessLayer.Model.DTO.UpdateAccount)">
            <summary>
            Update the Account
            </summary>
            <param name="Account">Account Model</param>
            <returns>Updated record count</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.GatewayController">
            <summary>
            Gateway Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.GetGatewayList(System.String,System.Int64,System.Int16,System.Int16)">
            <summary>
            Returns the list of gateways that belongs to user.
            </summary>
            <param name="Name">Filters list to gateways with names containing this string. (case-insensitive)</param>
            <param name="NetworkID">Filters list to gateway that belong to this network id</param>
            <param name="ApplicationID">Filters list to gateway that are this application type</param>
            <param name="Status">Filters list to gateway that match this status</param>
            <returns>gateway list</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.UpdateGateway(Coopers.BusinessLayer.Model.DTO.UpdateGateway)">
            <summary>
            Update the Gateway
            </summary>
            <param name="UpdateGateway">Gateway Model</param>
            <returns>No of records updated</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.BulkUpdateGateway(System.Collections.Generic.List{Coopers.BusinessLayer.Model.DTO.UpdateGateway})">
            <summary>
            Bulk update Gateways
            </summary>
            <param name="UpdateGateways">Bulk Update Gateway Model</param>
            <returns>Result of the bulk Update</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.AssignGateway(System.Int64,System.Int64)">
            <summary>
            Assigns gateway to the specified network
            </summary>
            <param name="GatewayID">Identifier of gateway to move</param>
            <param name="NetworkID">Identifier of network on your account</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.BulkAssignGateway(Coopers.BusinessLayer.Model.DTO.GatewayBulkAssign)">
            <summary>
            Assigns gateways to the specified network
            </summary>
            <param name="GatewayBulkAssign">GatewayBulkAssign model</param>
            <returns>list of GatewayBulkResponse</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.RemoveGateway(System.Int64)">
            <summary>
            Removes the gateway object from the network.
            </summary>
            <param name="GatewayID">Unique identifier of the gateway</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.BulkRemoveGateway(System.Collections.Generic.List{System.Int64})">
            <summary>
            Removes the gateways from the network.
            </summary>
            <param name="GatewayIDs">Lis of gateway ids</param>
            <returns>list of GatewayBulkResponse model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.GatewayController.CreateGateway(Coopers.BusinessLayer.Model.DTO.Gateway)">
            <summary>
            Create a gateway
            </summary>
            <param name="Gateway">Gateway model</param>
            <returns>if created 1 else 0  </returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.LocationsController.GetLocationSummaryByID(System.Int32)">
            <summary>
            Get the Location Summary for a given Location ID
            </summary>
            <param name="LocationID">Unique ID of the location</param>
            <returns>LocationSummaryDTO</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.UserController">
            <summary>
            User Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.GetUserInfo">
            <summary>
            Get the currently loggeg in User info. 
            </summary>
            <returns>User Model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.GetUserDetails">
            <summary>
            Get the currently loggeg in User's details. 
            Returns the Users List and payment info if the current user is Admin
            </summary>
            <returns>User Detail model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.GetNetworkPermissons(System.Int64)">
            <summary>
            Get the NetworPermissions for a given User
            </summary>
            <param name="UserID">Unique Indentifier for the User</param>
            <returns>List of networkIds</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.GetUserPermissons(System.Int64)">
            <summary>
            Get the UserPermissions for a given User
            </summary>
            <param name="UserID">Unique indetofier for the User</param>
            <returns>UserPermissions</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.DeleteUser(System.Int64)">
            <summary>
            Delete the user by the ID
            </summary>
            <param name="UserID">Unique identifier for the user</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.UpdateUser(Coopers.BusinessLayer.Model.DTO.UpdateUser)">
            <summary>
            Update the user
            </summary>
            <param name="User">User Model</param>
            <returns>success/failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.UpdateUser(Coopers.BusinessLayer.Model.DTO.UserPermission)">
            <summary>
            Update the user Network Permissions
            </summary>
            <param name="UserPermission">User Permission update info</param>
            <returns>success/failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.UserController.CreateUser(Coopers.BusinessLayer.Model.DTO.UserCreate)">
            <summary>
            Create the user
            </summary>
            <param name="User">User Model</param>
            <returns>unique indetifier for the created user</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.PaymentController">
            <summary>
            Gateway Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.PaymentController.GetPaymentDetails(System.String)">
            <summary>
            Get the payment details for a given Product 
            </summary>
            <param name="ProductName">Product Name</param>
            <returns>Payment Details model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.PaymentController.GetPaymentHistory">
            <summary>
            Get the payment history for the currently loggedin user's Account 
            </summary>
            <returns>PaymetnHistory List</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.PaymentController.MakePayment(Coopers.BusinessLayer.Model.DTO.Payment)">
            <summary>
            Execute the payment
            </summary>
            <param name="Payment">Payment model</param>
            <returns>PaymentHistory ID</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.SensorController">
            <summary>
            Sensor Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.GetSenserList(System.String,System.Int64,System.Int16,System.Int16)">
            <summary>
            Returns the list of sensors that belongs to user.
            </summary>
            <param name="NetworkID">Integer (optional)	Filters list to sensor that belong to this network id</param>
            <param name="ApplicationID">Integer (optional)	Filters list to sensor that are this application type</param>
            <param name="Status">Integer (optional)	Filters list to sensor that match this status</param>
            <param name="Name">String (optional)	Filters list to sensors with names containing this string. (case-insensitive)</param>
            <returns>Returns the list of sensors that belongs to user.</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.GetSecurityCode(System.Int64)">
            <summary>
            Get the SecurityCode for a given SesorID
            </summary>
            <param name="SensorID">Unique identfier for a sensor</param>
            <returns>Security code</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.UpdateSensor(Coopers.BusinessLayer.Model.DTO.UpdateSensor)">
            <summary>
            Update the SensorName and the Heartbeat info
            </summary>
            <param name="UpdateSensor">Update sensor model</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.BulkUpdateSensor(System.Collections.Generic.List{Coopers.BusinessLayer.Model.DTO.UpdateSensor})">
            <summary>
            Bulk Update sensor details 
            </summary>
            <param name="UpdateSensors">List of BulkUpdate model</param>
            <returns>List of SensorBulkResponse</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.UpdateSensorAttribute(Coopers.BusinessLayer.Model.DTO.SensorAttribute)">
            <summary>
            Creates/Updates sensor attribute.
            </summary>
            <param name="SensorAttribute">Sensor attribute model</param>
            <returns>Created/Updated Sensor attribute model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.AssignSensor(System.Int64,System.Int64)">
            <summary>
            Assigns sensor to the specified network
            </summary>
            <param name="SensorID">Identifier of sensor to move</param>
            <param name="NetworkID">Identifier of network on your account</param>
            <returns>Success if Sensor assigned successfully</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.BulkAssignSensor(Coopers.BusinessLayer.Model.DTO.SensorBulkAssign)">
            <summary>
            Assign the sensors to the specified network
            </summary>
            <param name="SensorBulkAssign">Sensor Bulk Assign Model</param>
            <returns>Success if Sensor assigned successfully</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.CreateSensor(Coopers.BusinessLayer.Model.DTO.CreateSensor)">
            <summary>
            Create a Sensor
            </summary>
            <param name="CreateSensor">Create sensor model</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.RemoveSensor(System.Int64)">
            <summary>
            Removes the sensors object from the network.
            </summary>
            <param name="SensorID">unique identofier for the network</param>
            <returns>Success if Sensors removed successfully else failure</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.SensorController.RemoveSensor(System.Collections.Generic.List{System.Int64})">
            <summary>
            Removes the sensors from the network.
            </summary>
            <param name="SensorIDs">List of sensor ids</param>
            <returns>Success if Sensors removed successfully else failure</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Controllers.TokenController">
            <summary>
            Token Endpoint
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Controllers.TokenController.GetAuthToken(Coopers.BusinessLayer.Model.DTO.User)">
            <summary>
            Returns authorization token for username password to be used in all other api methods.
            </summary>
            <param name="UserName">Username you use to access iMonnit</param>
            <param name="Password">Password you use to access iMonnit</param>
            <returns>Token</returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Filters.ExceptionFilter">
            <summary>
            Exception Filter
            </summary>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Filters.AuthenticationFilter">
            <summary>
            Autheitcation Filter
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Filters.AuthenticationFilter.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>
            Calls when a process requests authorization.
            </summary>
            <param name="actionContext">The action context, which encapsulates information for using System.Web.Http.Filters.AuthorizationFilterAttribute.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Filters.AuthenticationFilter.FetchFromHeader(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            retrive header detail from the request 
            </summary>
            <param name="actionContext"></param>
            <returns></returns>
        </member>
        <member name="T:Coopers.BusinessLayer.API.Filters.ModelValidationAction">
            <summary>
            Model Validator
            </summary>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Filters.ModelValidationAction.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            Chech the Model Validation errrors
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Filters.ModelValidationAction.PrepareModelValidationError(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Prepare the model errors
            </summary>
            <param name="actionContext">The action context.</param>
            <returns>error string</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Providers.HttpContextProvider.GetToken">
            <summary>
            Get the token passed by the user.
            </summary>
            <returns>Token</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Providers.HttpContextProvider.GetRegistrationToken">
            <summary>
            Get the registration token
            </summary>
            <returns>Token</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Providers.HttpContextProvider.GetIntegratedNotifyToken">
            <summary>
            Get the Authentication token for the Integrated Notfiy API
            </summary>
            <returns>Athentication Token</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Providers.HttpContextProvider.GetCurrentUser">
            <summary>
            Get the currently loggedin User Info.
            </summary>
            <returns>User Model</returns>
        </member>
        <member name="M:Coopers.BusinessLayer.API.Providers.HttpContextProvider.GetCurrentUserAccountID">
            <summary>
            Get the AccountID for the currently loggedin User
            </summary>
            <returns>Account ID</returns>
        </member>
    </members>
</doc>
